{"version":3,"sources":["components/NavMenu.js","components/Layout.js","components/Home.js","components/FetchData.js","components/Counter.js","components/Cars/SideNav/SideNav.js","components/Cars/Pages/Dashboard.js","components/Cars/Pages/Fuel.js","components/Cars/Pages/Services.js","components/Cars/Pages/Insurance.js","components/Cars/Cars.js","components/Costs/Costs.js","components/Contact/Contact.js","App.js","registerServiceWorker.js","index.js"],"names":["NavMenu","props","toggleNavbar","bind","state","collapsed","this","setState","Navbar","className","dark","Container","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","isOpen","navbar","NavItem","NavLink","Component","displayName","name","Layout","children","Home","FetchData","forecasts","loading","populateWeatherData","contents","renderForecastsTable","id","fetch","response","json","data","aria-labelledby","map","forecast","key","date","temperatureC","temperatureF","summary","Counter","currentCount","incrementCounter","aria-live","SideNav","selectedCar","url","match","value","onChange","event","target","onCarChange","SideNavWithRouter","withRouter","DashBoard","Fuel","Services","Insurance","Cars","newSelectedCar","path","exact","CarsWithRouter","Costs","Contact","App","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","basename","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.70aa375d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Container,\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavbarToggler,\r\n  NavItem,\r\n  NavLink,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./NavMenu.css\";\r\n\r\nexport class NavMenu extends Component {\r\n  static displayName = NavMenu.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed: true,\r\n    };\r\n  }\r\n\r\n  toggleNavbar() {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header>\r\n        <Navbar\r\n          className=\"navbar-expand-sm navbar-toggleable-sm border-bottom box-shadow mb-3 nav-menu\"\r\n          dark\r\n        >\r\n          <Container>\r\n            <NavbarBrand tag={Link} to=\"/\">\r\n              CarsManager\r\n            </NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n            <Collapse\r\n              className=\"d-sm-inline-flex flex-sm-row-reverse\"\r\n              isOpen={!this.state.collapsed}\r\n              navbar\r\n            >\r\n              <ul className=\"navbar-nav flex-grow\">\r\n                <NavItem>\r\n                  <NavLink tag={Link} to=\"/\">\r\n                    Home\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} to=\"/cars\">\r\n                    Cars\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} to=\"/costs\">\r\n                    Costs\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} to=\"/contact\">\r\n                    Contact\r\n                  </NavLink>\r\n                </NavItem>\r\n              </ul>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport { NavMenu } from \"./NavMenu\";\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app-style\">\r\n        <NavMenu />\r\n        <Container>{this.props.children}</Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport class Home extends Component {\r\n  static displayName = Home.name;\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Dashboard</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class FetchData extends Component {\r\n  static displayName = FetchData.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { forecasts: [], loading: true };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populateWeatherData();\r\n  }\r\n\r\n  static renderForecastsTable(forecasts) {\r\n    return (\r\n      <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Temp. (C)</th>\r\n            <th>Temp. (F)</th>\r\n            <th>Summary</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {forecasts.map(forecast =>\r\n            <tr key={forecast.date}>\r\n              <td>{forecast.date}</td>\r\n              <td>{forecast.temperatureC}</td>\r\n              <td>{forecast.temperatureF}</td>\r\n              <td>{forecast.summary}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n      : FetchData.renderForecastsTable(this.state.forecasts);\r\n\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >Weather forecast</h1>\r\n        <p>This component demonstrates fetching data from the server.</p>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async populateWeatherData() {\r\n    const response = await fetch('weatherforecast');\r\n    const data = await response.json();\r\n    this.setState({ forecasts: data, loading: false });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Counter extends Component {\r\n  static displayName = Counter.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentCount: 0 };\r\n    this.incrementCounter = this.incrementCounter.bind(this);\r\n  }\r\n\r\n  incrementCounter() {\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Counter</h1>\r\n\r\n        <p>This is a simple example of a React component.</p>\r\n\r\n        <p aria-live=\"polite\">Current count: <strong>{this.state.currentCount}</strong></p>\r\n\r\n        <button className=\"btn btn-primary\" onClick={this.incrementCounter}>Increment</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nclass SideNav extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = { selectedCar: props.id };\r\n  }\r\n\r\n  render() {\r\n    let url = this.props.match.url;\r\n    function handleChange(event) {\r\n      this.setState({\r\n        selectedCar: event.target.value,\r\n      });\r\n      this.props.onCarChange(event.target.value);\r\n    }\r\n    return (\r\n      <div className=\"side-nav\">\r\n        <select\r\n          value={this.state.selectedCar}\r\n          onChange={handleChange.bind(this)}\r\n        >\r\n          <option value=\"1\">Focus</option>\r\n          <option value=\"2\">Mondeo</option>\r\n          <option value=\"3\">Seicento</option>\r\n        </select>\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <Link to={`${url}/${this.state.selectedCar}`}>Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to={`${url}/${this.state.selectedCar}/fuel`}>\r\n                Tankowanie\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to={`${url}/${this.state.selectedCar}/services`}>\r\n                Serwisowanie\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to={`${url}/${this.state.selectedCar}/insurance`}>\r\n                Ubezpieczenie i przeglądy\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const SideNavWithRouter = withRouter(SideNav);\r\n","import React, { Component } from \"react\";\r\n\r\nexport class DashBoard extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Car dashboard</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nexport class Fuel extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Tankowanie dla {this.props.id}</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport class Services extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Serwisowanie</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport class Insurance extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Ubezpieczenie i przeglądy</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, withRouter } from \"react-router-dom\";\r\nimport { SideNavWithRouter } from \"./SideNav/SideNav\";\r\nimport { DashBoard } from \"./Pages/Dashboard\";\r\nimport { Fuel } from \"./Pages/Fuel\";\r\nimport { Services } from \"./Pages/Services\";\r\nimport { Insurance } from \"./Pages/Insurance\";\r\n\r\nclass Cars extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { selectedCar: 1 };\r\n  }\r\n\r\n  render() {\r\n    let url = this.props.match.url;\r\n    function handleCarChange(newSelectedCar) {\r\n      this.setState({\r\n        selectedCar: newSelectedCar,\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div className=\"cars-page\">\r\n        <SideNavWithRouter\r\n          id={this.state.selectedCar}\r\n          onCarChange={handleCarChange.bind(this)}\r\n        />\r\n        <Switch>\r\n          <Route path={`${url}/:selectedCar/fuel`}>\r\n            <Fuel id={this.state.selectedCar} />\r\n          </Route>\r\n          <Route path={`${url}/:selectedCar/services`}>\r\n            <Services />\r\n          </Route>\r\n          <Route path={`${url}/:selectedCar/insurance`}>\r\n            <Insurance />\r\n          </Route>\r\n          <Route exact path={`${url}/:selectedCar`}>\r\n            <DashBoard />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const CarsWithRouter = withRouter(Cars);\r\n","import React, { Component } from \"react\";\r\n\r\nexport class Costs extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Costs</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport class Contact extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Contact</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Layout } from \"./components/Layout\";\r\nimport { Home } from \"./components/Home\";\r\nimport { FetchData } from \"./components/FetchData\";\r\nimport { Counter } from \"./components/Counter\";\r\nimport { CarsWithRouter } from \"./components/Cars/Cars\";\r\nimport { Costs } from \"./components/Costs/Costs\";\r\nimport { Contact } from \"./components/Contact/Contact\";\r\n\r\nimport \"./custom.css\";\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Layout>\r\n          <Switch>\r\n            <Route path=\"/cars\">\r\n              <CarsWithRouter />\r\n            </Route>\r\n            <Route path=\"/costs\">\r\n              <Costs />\r\n            </Route>\r\n            <Route path=\"/contact\">\r\n              <Contact />\r\n            </Route>\r\n            <Route path=\"/fetch-data\">\r\n              <FetchData />\r\n            </Route>\r\n            <Route path=\"/counter\">\r\n              <Counter />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </Layout>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}